syntax = "proto3";

package calendar.v1;

option go_package = "github.com/Averlex/golang-hw/hw12_13_14_15_16_calendar/api/calendar/v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/api/annotations.proto";

service CalendarService {
    // POST /v1/events
    rpc CreateEvent (CreateEventRequest) returns (CreateEventResponse) {
        option (google.api.http) = {
            post: "/v1/events"
            body: "data"
            response_body: "event"
        };
    };
    // PUT /v1/events/{id}
    rpc UpdateEvent (UpdateEventRequest) returns (UpdateEventResponse) {
        option (google.api.http) = {
            put: "/v1/events/{id}"
            body: "data"
            response_body: "event"
        };
    };
    // DELETE /v1/events/{id}
    rpc DeleteEvent (DeleteEventRequest) returns (DeleteEventResponse) {
        option (google.api.http) = {
            delete: "/v1/events/{id}"
        };
    };
    // GET /v1/events/{id}
    rpc GetEvent (GetEventRequest) returns (GetEventResponse) {
        option (google.api.http) = {
            get: "/v1/events/{id}"
            response_body: "event"
        };
    };
    // GET /v1/events/user/{user_id}
    rpc GetAllUserEvents (GetAllUserEventsRequest) returns (GetAllUserEventsResponse) {
        option (google.api.http) = {
            get: "/v1/events/user/{user_id}"
            response_body: "events"
        };
    };
    // GET /v1/events/day
    rpc GetEventsForDay (GetEventsForDayRequest) returns (GetEventsForDayResponse) {
        option (google.api.http) = {
            get: "/v1/events/day"
            response_body: "events"
        };
    };
    // GET /v1/events/week
    rpc GetEventsForWeek (GetEventsForWeekRequest) returns (GetEventsForWeekResponse) {
        option (google.api.http) = {
            get: "/v1/events/week"
            response_body: "events"
        };
    };
    // GET /v1/events/month
    rpc GetEventsForMonth (GetEventsForMonthRequest) returns (GetEventsForMonthResponse) {
        option (google.api.http) = {
            get: "/v1/events/month"
            response_body: "events"
        };
    };
    // GET /v1/events/period
    rpc GetEventsForPeriod (GetEventsForPeriodRequest) returns (GetEventsForPeriodResponse) {
        option (google.api.http) = {
            get: "/v1/events/period"
            response_body: "events"
        };
    };
}

message Event {
    string id = 1;
    EventData data = 2;
}

message EventData {
    string title = 1;
    google.protobuf.Timestamp datetime = 2;
    google.protobuf.Duration duration = 3;
    string description = 4;
    string user_id = 5;
    google.protobuf.Duration remind_in = 6;
}

message CreateEventRequest {
    EventData data = 1;
}

message CreateEventResponse {
    Event event = 1;
}

message UpdateEventRequest {
    string id = 1;
    EventData data = 2;
}

message UpdateEventResponse {
    Event event = 1;
}

message DeleteEventRequest {
    string id = 1;
}

message DeleteEventResponse {
}

message GetEventRequest {
    string id = 1;
}

message GetEventResponse {
    Event event = 1;
}

message GetAllUserEventsRequest {
    string user_id = 1;
}

message GetAllUserEventsResponse {
    repeated Event events = 1;
}

message GetEventsForDayRequest {
    google.protobuf.Timestamp date = 1;
    optional string user_id = 2;
}

message GetEventsForDayResponse {
    repeated Event events = 1;
}

message GetEventsForWeekRequest {
    google.protobuf.Timestamp date = 1;
    optional string user_id = 2;
}

message GetEventsForWeekResponse {
    repeated Event events = 1;
}

message GetEventsForMonthRequest {
    google.protobuf.Timestamp date = 1;
    optional string user_id = 2;
}

message GetEventsForMonthResponse {
    repeated Event events = 1;
}

message GetEventsForPeriodRequest {
    google.protobuf.Timestamp start_date = 1;
    google.protobuf.Timestamp end_date = 2;
    optional string user_id = 3;
}

message GetEventsForPeriodResponse {
    repeated Event events = 1;
}