// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/calendar/v1/CalendarService.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data          *EventData             `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetData() *EventData {
	if x != nil {
		return x.Data
	}
	return nil
}

type EventData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Datetime      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Duration      *durationpb.Duration   `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	UserId        string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RemindIn      *durationpb.Duration   `protobuf:"bytes,6,opt,name=remind_in,json=remindIn,proto3" json:"remind_in,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventData) Reset() {
	*x = EventData{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventData) ProtoMessage() {}

func (x *EventData) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventData.ProtoReflect.Descriptor instead.
func (*EventData) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{1}
}

func (x *EventData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EventData) GetDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.Datetime
	}
	return nil
}

func (x *EventData) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *EventData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EventData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EventData) GetRemindIn() *durationpb.Duration {
	if x != nil {
		return x.RemindIn
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       []*anypb.Any           `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{2}
}

func (x *Status) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Status) GetDetails() []*anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

type CreateEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *EventData             `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventRequest) Reset() {
	*x = CreateEventRequest{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventRequest) ProtoMessage() {}

func (x *CreateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventRequest.ProtoReflect.Descriptor instead.
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{3}
}

func (x *CreateEventRequest) GetData() *EventData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Status        *Status                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventResponse) Reset() {
	*x = CreateEventResponse{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventResponse) ProtoMessage() {}

func (x *CreateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventResponse.ProtoReflect.Descriptor instead.
func (*CreateEventResponse) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{4}
}

func (x *CreateEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *CreateEventResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type UpdateEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data          *EventData             `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventRequest) Reset() {
	*x = UpdateEventRequest{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventRequest) ProtoMessage() {}

func (x *UpdateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventRequest.ProtoReflect.Descriptor instead.
func (*UpdateEventRequest) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEventRequest) GetData() *EventData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Status        *Status                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventResponse) Reset() {
	*x = UpdateEventResponse{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventResponse) ProtoMessage() {}

func (x *UpdateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventResponse.ProtoReflect.Descriptor instead.
func (*UpdateEventResponse) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *UpdateEventResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type DeleteEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventRequest) Reset() {
	*x = DeleteEventRequest{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventRequest) ProtoMessage() {}

func (x *DeleteEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *Status                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventResponse) Reset() {
	*x = DeleteEventResponse{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventResponse) ProtoMessage() {}

func (x *DeleteEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventResponse.ProtoReflect.Descriptor instead.
func (*DeleteEventResponse) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteEventResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventRequest) Reset() {
	*x = GetEventRequest{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventRequest) ProtoMessage() {}

func (x *GetEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventRequest.ProtoReflect.Descriptor instead.
func (*GetEventRequest) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{9}
}

func (x *GetEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Status        *Status                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventResponse) Reset() {
	*x = GetEventResponse{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventResponse) ProtoMessage() {}

func (x *GetEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventResponse.ProtoReflect.Descriptor instead.
func (*GetEventResponse) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{10}
}

func (x *GetEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *GetEventResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetAllUserEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllUserEventsRequest) Reset() {
	*x = GetAllUserEventsRequest{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllUserEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUserEventsRequest) ProtoMessage() {}

func (x *GetAllUserEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUserEventsRequest.ProtoReflect.Descriptor instead.
func (*GetAllUserEventsRequest) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{11}
}

func (x *GetAllUserEventsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetAllUserEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	Status        *Status                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllUserEventsResponse) Reset() {
	*x = GetAllUserEventsResponse{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllUserEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUserEventsResponse) ProtoMessage() {}

func (x *GetAllUserEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUserEventsResponse.ProtoReflect.Descriptor instead.
func (*GetAllUserEventsResponse) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllUserEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetAllUserEventsResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetEventsForDayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	UserId        *string                `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsForDayRequest) Reset() {
	*x = GetEventsForDayRequest{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsForDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsForDayRequest) ProtoMessage() {}

func (x *GetEventsForDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsForDayRequest.ProtoReflect.Descriptor instead.
func (*GetEventsForDayRequest) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{13}
}

func (x *GetEventsForDayRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetEventsForDayRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

type GetEventsForDayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	Status        *Status                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsForDayResponse) Reset() {
	*x = GetEventsForDayResponse{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsForDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsForDayResponse) ProtoMessage() {}

func (x *GetEventsForDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsForDayResponse.ProtoReflect.Descriptor instead.
func (*GetEventsForDayResponse) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{14}
}

func (x *GetEventsForDayResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetEventsForDayResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetEventsForWeekRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	UserId        *string                `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsForWeekRequest) Reset() {
	*x = GetEventsForWeekRequest{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsForWeekRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsForWeekRequest) ProtoMessage() {}

func (x *GetEventsForWeekRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsForWeekRequest.ProtoReflect.Descriptor instead.
func (*GetEventsForWeekRequest) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{15}
}

func (x *GetEventsForWeekRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetEventsForWeekRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

type GetEventsForWeekResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	Status        *Status                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsForWeekResponse) Reset() {
	*x = GetEventsForWeekResponse{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsForWeekResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsForWeekResponse) ProtoMessage() {}

func (x *GetEventsForWeekResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsForWeekResponse.ProtoReflect.Descriptor instead.
func (*GetEventsForWeekResponse) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{16}
}

func (x *GetEventsForWeekResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetEventsForWeekResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetEventsForMonthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	UserId        *string                `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsForMonthRequest) Reset() {
	*x = GetEventsForMonthRequest{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsForMonthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsForMonthRequest) ProtoMessage() {}

func (x *GetEventsForMonthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsForMonthRequest.ProtoReflect.Descriptor instead.
func (*GetEventsForMonthRequest) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{17}
}

func (x *GetEventsForMonthRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetEventsForMonthRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

type GetEventsForMonthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	Status        *Status                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsForMonthResponse) Reset() {
	*x = GetEventsForMonthResponse{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsForMonthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsForMonthResponse) ProtoMessage() {}

func (x *GetEventsForMonthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsForMonthResponse.ProtoReflect.Descriptor instead.
func (*GetEventsForMonthResponse) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{18}
}

func (x *GetEventsForMonthResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetEventsForMonthResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetEventsForPeriodRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	UserId        *string                `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsForPeriodRequest) Reset() {
	*x = GetEventsForPeriodRequest{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsForPeriodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsForPeriodRequest) ProtoMessage() {}

func (x *GetEventsForPeriodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsForPeriodRequest.ProtoReflect.Descriptor instead.
func (*GetEventsForPeriodRequest) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{19}
}

func (x *GetEventsForPeriodRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetEventsForPeriodRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetEventsForPeriodRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

type GetEventsForPeriodResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	Status        *Status                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsForPeriodResponse) Reset() {
	*x = GetEventsForPeriodResponse{}
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsForPeriodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsForPeriodResponse) ProtoMessage() {}

func (x *GetEventsForPeriodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendar_v1_CalendarService_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsForPeriodResponse.ProtoReflect.Descriptor instead.
func (*GetEventsForPeriodResponse) Descriptor() ([]byte, []int) {
	return file_api_calendar_v1_CalendarService_proto_rawDescGZIP(), []int{20}
}

func (x *GetEventsForPeriodResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetEventsForPeriodResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_api_calendar_v1_CalendarService_proto protoreflect.FileDescriptor

const file_api_calendar_v1_CalendarService_proto_rawDesc = "" +
	"\n" +
	"%api/calendar/v1/CalendarService.proto\x12\vcalendar.v1\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"C\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12*\n" +
	"\x04data\x18\x02 \x01(\v2\x16.calendar.v1.EventDataR\x04data\"\x83\x02\n" +
	"\tEventData\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x126\n" +
	"\bdatetime\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bdatetime\x125\n" +
	"\bduration\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\bduration\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x126\n" +
	"\tremind_in\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\bremindIn\"f\n" +
	"\x06Status\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12.\n" +
	"\adetails\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\adetails\"@\n" +
	"\x12CreateEventRequest\x12*\n" +
	"\x04data\x18\x01 \x01(\v2\x16.calendar.v1.EventDataR\x04data\"l\n" +
	"\x13CreateEventResponse\x12(\n" +
	"\x05event\x18\x01 \x01(\v2\x12.calendar.v1.EventR\x05event\x12+\n" +
	"\x06status\x18\x02 \x01(\v2\x13.calendar.v1.StatusR\x06status\"P\n" +
	"\x12UpdateEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12*\n" +
	"\x04data\x18\x02 \x01(\v2\x16.calendar.v1.EventDataR\x04data\"l\n" +
	"\x13UpdateEventResponse\x12(\n" +
	"\x05event\x18\x01 \x01(\v2\x12.calendar.v1.EventR\x05event\x12+\n" +
	"\x06status\x18\x02 \x01(\v2\x13.calendar.v1.StatusR\x06status\"$\n" +
	"\x12DeleteEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"B\n" +
	"\x13DeleteEventResponse\x12+\n" +
	"\x06status\x18\x01 \x01(\v2\x13.calendar.v1.StatusR\x06status\"!\n" +
	"\x0fGetEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"i\n" +
	"\x10GetEventResponse\x12(\n" +
	"\x05event\x18\x01 \x01(\v2\x12.calendar.v1.EventR\x05event\x12+\n" +
	"\x06status\x18\x02 \x01(\v2\x13.calendar.v1.StatusR\x06status\"2\n" +
	"\x17GetAllUserEventsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"s\n" +
	"\x18GetAllUserEventsResponse\x12*\n" +
	"\x06events\x18\x01 \x03(\v2\x12.calendar.v1.EventR\x06events\x12+\n" +
	"\x06status\x18\x02 \x01(\v2\x13.calendar.v1.StatusR\x06status\"r\n" +
	"\x16GetEventsForDayRequest\x12.\n" +
	"\x04date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x1c\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x88\x01\x01B\n" +
	"\n" +
	"\b_user_id\"r\n" +
	"\x17GetEventsForDayResponse\x12*\n" +
	"\x06events\x18\x01 \x03(\v2\x12.calendar.v1.EventR\x06events\x12+\n" +
	"\x06status\x18\x02 \x01(\v2\x13.calendar.v1.StatusR\x06status\"s\n" +
	"\x17GetEventsForWeekRequest\x12.\n" +
	"\x04date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x1c\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x88\x01\x01B\n" +
	"\n" +
	"\b_user_id\"s\n" +
	"\x18GetEventsForWeekResponse\x12*\n" +
	"\x06events\x18\x01 \x03(\v2\x12.calendar.v1.EventR\x06events\x12+\n" +
	"\x06status\x18\x02 \x01(\v2\x13.calendar.v1.StatusR\x06status\"t\n" +
	"\x18GetEventsForMonthRequest\x12.\n" +
	"\x04date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x1c\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x88\x01\x01B\n" +
	"\n" +
	"\b_user_id\"t\n" +
	"\x19GetEventsForMonthResponse\x12*\n" +
	"\x06events\x18\x01 \x03(\v2\x12.calendar.v1.EventR\x06events\x12+\n" +
	"\x06status\x18\x02 \x01(\v2\x13.calendar.v1.StatusR\x06status\"\xb7\x01\n" +
	"\x19GetEventsForPeriodRequest\x129\n" +
	"\n" +
	"start_date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x1c\n" +
	"\auser_id\x18\x03 \x01(\tH\x00R\x06userId\x88\x01\x01B\n" +
	"\n" +
	"\b_user_id\"u\n" +
	"\x1aGetEventsForPeriodResponse\x12*\n" +
	"\x06events\x18\x01 \x03(\v2\x12.calendar.v1.EventR\x06events\x12+\n" +
	"\x06status\x18\x02 \x01(\v2\x13.calendar.v1.StatusR\x06status2\xbb\x06\n" +
	"\x0fCalendarService\x12P\n" +
	"\vCreateEvent\x12\x1f.calendar.v1.CreateEventRequest\x1a .calendar.v1.CreateEventResponse\x12P\n" +
	"\vUpdateEvent\x12\x1f.calendar.v1.UpdateEventRequest\x1a .calendar.v1.UpdateEventResponse\x12P\n" +
	"\vDeleteEvent\x12\x1f.calendar.v1.DeleteEventRequest\x1a .calendar.v1.DeleteEventResponse\x12G\n" +
	"\bGetEvent\x12\x1c.calendar.v1.GetEventRequest\x1a\x1d.calendar.v1.GetEventResponse\x12_\n" +
	"\x10GetAllUserEvents\x12$.calendar.v1.GetAllUserEventsRequest\x1a%.calendar.v1.GetAllUserEventsResponse\x12\\\n" +
	"\x0fGetEventsForDay\x12#.calendar.v1.GetEventsForDayRequest\x1a$.calendar.v1.GetEventsForDayResponse\x12_\n" +
	"\x10GetEventsForWeek\x12$.calendar.v1.GetEventsForWeekRequest\x1a%.calendar.v1.GetEventsForWeekResponse\x12b\n" +
	"\x11GetEventsForMonth\x12%.calendar.v1.GetEventsForMonthRequest\x1a&.calendar.v1.GetEventsForMonthResponse\x12e\n" +
	"\x12GetEventsForPeriod\x12&.calendar.v1.GetEventsForPeriodRequest\x1a'.calendar.v1.GetEventsForPeriodResponseBHZFgithub.com/Averlex/golang-hw/hw12_13_14_15_16_calendar/api/calendar/v1b\x06proto3"

var (
	file_api_calendar_v1_CalendarService_proto_rawDescOnce sync.Once
	file_api_calendar_v1_CalendarService_proto_rawDescData []byte
)

func file_api_calendar_v1_CalendarService_proto_rawDescGZIP() []byte {
	file_api_calendar_v1_CalendarService_proto_rawDescOnce.Do(func() {
		file_api_calendar_v1_CalendarService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_calendar_v1_CalendarService_proto_rawDesc), len(file_api_calendar_v1_CalendarService_proto_rawDesc)))
	})
	return file_api_calendar_v1_CalendarService_proto_rawDescData
}

var file_api_calendar_v1_CalendarService_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_calendar_v1_CalendarService_proto_goTypes = []any{
	(*Event)(nil),                      // 0: calendar.v1.Event
	(*EventData)(nil),                  // 1: calendar.v1.EventData
	(*Status)(nil),                     // 2: calendar.v1.Status
	(*CreateEventRequest)(nil),         // 3: calendar.v1.CreateEventRequest
	(*CreateEventResponse)(nil),        // 4: calendar.v1.CreateEventResponse
	(*UpdateEventRequest)(nil),         // 5: calendar.v1.UpdateEventRequest
	(*UpdateEventResponse)(nil),        // 6: calendar.v1.UpdateEventResponse
	(*DeleteEventRequest)(nil),         // 7: calendar.v1.DeleteEventRequest
	(*DeleteEventResponse)(nil),        // 8: calendar.v1.DeleteEventResponse
	(*GetEventRequest)(nil),            // 9: calendar.v1.GetEventRequest
	(*GetEventResponse)(nil),           // 10: calendar.v1.GetEventResponse
	(*GetAllUserEventsRequest)(nil),    // 11: calendar.v1.GetAllUserEventsRequest
	(*GetAllUserEventsResponse)(nil),   // 12: calendar.v1.GetAllUserEventsResponse
	(*GetEventsForDayRequest)(nil),     // 13: calendar.v1.GetEventsForDayRequest
	(*GetEventsForDayResponse)(nil),    // 14: calendar.v1.GetEventsForDayResponse
	(*GetEventsForWeekRequest)(nil),    // 15: calendar.v1.GetEventsForWeekRequest
	(*GetEventsForWeekResponse)(nil),   // 16: calendar.v1.GetEventsForWeekResponse
	(*GetEventsForMonthRequest)(nil),   // 17: calendar.v1.GetEventsForMonthRequest
	(*GetEventsForMonthResponse)(nil),  // 18: calendar.v1.GetEventsForMonthResponse
	(*GetEventsForPeriodRequest)(nil),  // 19: calendar.v1.GetEventsForPeriodRequest
	(*GetEventsForPeriodResponse)(nil), // 20: calendar.v1.GetEventsForPeriodResponse
	(*timestamppb.Timestamp)(nil),      // 21: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),        // 22: google.protobuf.Duration
	(*anypb.Any)(nil),                  // 23: google.protobuf.Any
}
var file_api_calendar_v1_CalendarService_proto_depIdxs = []int32{
	1,  // 0: calendar.v1.Event.data:type_name -> calendar.v1.EventData
	21, // 1: calendar.v1.EventData.datetime:type_name -> google.protobuf.Timestamp
	22, // 2: calendar.v1.EventData.duration:type_name -> google.protobuf.Duration
	22, // 3: calendar.v1.EventData.remind_in:type_name -> google.protobuf.Duration
	23, // 4: calendar.v1.Status.details:type_name -> google.protobuf.Any
	1,  // 5: calendar.v1.CreateEventRequest.data:type_name -> calendar.v1.EventData
	0,  // 6: calendar.v1.CreateEventResponse.event:type_name -> calendar.v1.Event
	2,  // 7: calendar.v1.CreateEventResponse.status:type_name -> calendar.v1.Status
	1,  // 8: calendar.v1.UpdateEventRequest.data:type_name -> calendar.v1.EventData
	0,  // 9: calendar.v1.UpdateEventResponse.event:type_name -> calendar.v1.Event
	2,  // 10: calendar.v1.UpdateEventResponse.status:type_name -> calendar.v1.Status
	2,  // 11: calendar.v1.DeleteEventResponse.status:type_name -> calendar.v1.Status
	0,  // 12: calendar.v1.GetEventResponse.event:type_name -> calendar.v1.Event
	2,  // 13: calendar.v1.GetEventResponse.status:type_name -> calendar.v1.Status
	0,  // 14: calendar.v1.GetAllUserEventsResponse.events:type_name -> calendar.v1.Event
	2,  // 15: calendar.v1.GetAllUserEventsResponse.status:type_name -> calendar.v1.Status
	21, // 16: calendar.v1.GetEventsForDayRequest.date:type_name -> google.protobuf.Timestamp
	0,  // 17: calendar.v1.GetEventsForDayResponse.events:type_name -> calendar.v1.Event
	2,  // 18: calendar.v1.GetEventsForDayResponse.status:type_name -> calendar.v1.Status
	21, // 19: calendar.v1.GetEventsForWeekRequest.date:type_name -> google.protobuf.Timestamp
	0,  // 20: calendar.v1.GetEventsForWeekResponse.events:type_name -> calendar.v1.Event
	2,  // 21: calendar.v1.GetEventsForWeekResponse.status:type_name -> calendar.v1.Status
	21, // 22: calendar.v1.GetEventsForMonthRequest.date:type_name -> google.protobuf.Timestamp
	0,  // 23: calendar.v1.GetEventsForMonthResponse.events:type_name -> calendar.v1.Event
	2,  // 24: calendar.v1.GetEventsForMonthResponse.status:type_name -> calendar.v1.Status
	21, // 25: calendar.v1.GetEventsForPeriodRequest.start_date:type_name -> google.protobuf.Timestamp
	21, // 26: calendar.v1.GetEventsForPeriodRequest.end_date:type_name -> google.protobuf.Timestamp
	0,  // 27: calendar.v1.GetEventsForPeriodResponse.events:type_name -> calendar.v1.Event
	2,  // 28: calendar.v1.GetEventsForPeriodResponse.status:type_name -> calendar.v1.Status
	3,  // 29: calendar.v1.CalendarService.CreateEvent:input_type -> calendar.v1.CreateEventRequest
	5,  // 30: calendar.v1.CalendarService.UpdateEvent:input_type -> calendar.v1.UpdateEventRequest
	7,  // 31: calendar.v1.CalendarService.DeleteEvent:input_type -> calendar.v1.DeleteEventRequest
	9,  // 32: calendar.v1.CalendarService.GetEvent:input_type -> calendar.v1.GetEventRequest
	11, // 33: calendar.v1.CalendarService.GetAllUserEvents:input_type -> calendar.v1.GetAllUserEventsRequest
	13, // 34: calendar.v1.CalendarService.GetEventsForDay:input_type -> calendar.v1.GetEventsForDayRequest
	15, // 35: calendar.v1.CalendarService.GetEventsForWeek:input_type -> calendar.v1.GetEventsForWeekRequest
	17, // 36: calendar.v1.CalendarService.GetEventsForMonth:input_type -> calendar.v1.GetEventsForMonthRequest
	19, // 37: calendar.v1.CalendarService.GetEventsForPeriod:input_type -> calendar.v1.GetEventsForPeriodRequest
	4,  // 38: calendar.v1.CalendarService.CreateEvent:output_type -> calendar.v1.CreateEventResponse
	6,  // 39: calendar.v1.CalendarService.UpdateEvent:output_type -> calendar.v1.UpdateEventResponse
	8,  // 40: calendar.v1.CalendarService.DeleteEvent:output_type -> calendar.v1.DeleteEventResponse
	10, // 41: calendar.v1.CalendarService.GetEvent:output_type -> calendar.v1.GetEventResponse
	12, // 42: calendar.v1.CalendarService.GetAllUserEvents:output_type -> calendar.v1.GetAllUserEventsResponse
	14, // 43: calendar.v1.CalendarService.GetEventsForDay:output_type -> calendar.v1.GetEventsForDayResponse
	16, // 44: calendar.v1.CalendarService.GetEventsForWeek:output_type -> calendar.v1.GetEventsForWeekResponse
	18, // 45: calendar.v1.CalendarService.GetEventsForMonth:output_type -> calendar.v1.GetEventsForMonthResponse
	20, // 46: calendar.v1.CalendarService.GetEventsForPeriod:output_type -> calendar.v1.GetEventsForPeriodResponse
	38, // [38:47] is the sub-list for method output_type
	29, // [29:38] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_api_calendar_v1_CalendarService_proto_init() }
func file_api_calendar_v1_CalendarService_proto_init() {
	if File_api_calendar_v1_CalendarService_proto != nil {
		return
	}
	file_api_calendar_v1_CalendarService_proto_msgTypes[13].OneofWrappers = []any{}
	file_api_calendar_v1_CalendarService_proto_msgTypes[15].OneofWrappers = []any{}
	file_api_calendar_v1_CalendarService_proto_msgTypes[17].OneofWrappers = []any{}
	file_api_calendar_v1_CalendarService_proto_msgTypes[19].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_calendar_v1_CalendarService_proto_rawDesc), len(file_api_calendar_v1_CalendarService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_calendar_v1_CalendarService_proto_goTypes,
		DependencyIndexes: file_api_calendar_v1_CalendarService_proto_depIdxs,
		MessageInfos:      file_api_calendar_v1_CalendarService_proto_msgTypes,
	}.Build()
	File_api_calendar_v1_CalendarService_proto = out.File
	file_api_calendar_v1_CalendarService_proto_goTypes = nil
	file_api_calendar_v1_CalendarService_proto_depIdxs = nil
}
